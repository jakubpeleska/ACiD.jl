name: CI
on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:
  workflow_dispatch:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    permissions: # needed to allow julia-actions/cache to proactively delete old caches that it has created
      actions: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - name: Set the number of threads to 5
        run: echo "JULIA_NUM_THREADS=5" >> ${GITHUB_ENV}
        shell: bash
      - name: Enable downloading datasets (like CIFAR10)
        run: echo "DATADEPS_ALWAYS_ACCEPT=true" >> ${GITHUB_ENV}
        shell: bash
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - name: Install dependencies in the environment
        run: |
          using Pkg
          Pkg.add("CUDA")
          Pkg.add("cuDNN")
          Pkg.resolve()
          Pkg.update()
          Pkg.instantiate()
        shell: julia --color=yes --project=. {0}
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
